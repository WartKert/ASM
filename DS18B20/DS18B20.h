/**********************************************************************************************************************************
"DS18B20.h" - содержит описание работы с температурным датчиком DS18B20.
	GLCD_init (); - ФУНКЦИЯ ИНИЦИАЛИЗАЦИИ GLCD
	GLCD_TEXT_WRITE (char *write_text, int PAGE, int ADDRESS); - ФУНКЦИЯ ОТОБРАЖЕНИЯ ТЕКСТА
	GLCD_PICTURE_WRITE (const char *pic,char PAGE); - ФУНКЦИЯ ОТОБРАЖЕНИЯ ИЗОБРАЖЕНИЯ 							<0x01=> Пин №0 <0x02=> Пин №1 <0x04=> Пин №2 <0x08=> Пин №3 <0x10=> Пин №4 <0x20=> Пин №5
//                                  				<0x40=> Пин №6 <0x80=> Пин №7 <0x100=> Пин №8 <0x200=> Пин №9 <0x400=> Пин №10 <0x800=> Пин №11
//                                  				<0x1000=> Пин №12 <0x2000=> Пин №13 <0x4000=> Пин №14 <0x8000=> Пин №15

Дата составления: 10.05.12
Автор: RUS_SERV
***********************************************************************************************************************************/
#ifndef DS18B20_H
  #define DS18B20_H
//#include <stm32l1xx.h>
  #include "system_stm32l1xx.h"
//***********************************************************************************************************
// ОПРЕДЕЛЕНИЕ ЗНАЧЕНИЙ ROM КОММАНД ***************************************
#define SEARCH_ROM					0xF0									// значение команды поиска
#define READ_ROM					0x33									// значение команды прочтения (если всего 1 устройство)
#define MATCH_ROM					0x55									// значение команды соответствия
#define SKIP_ROM					0xCC									// значение команды пропуска
#define ALARM_SEARCH				0xEC									// значение команды поиска тревоги
// ОПРЕДЕЛЕНИЕ ЗНАЧЕНИЙ ФУНКЦИОНАЛЬНЫХ КОММАНД ***************************************
#define CONVERT_TEMP				0x44									// значение команды конвертирований температуры
#define WRITE_TO_MEM				0x4E									// значение команды запись в память
#define READ_FROM_MEM				0xBE									// значение команды чтение из памяти
#define COPY_RAM_TO_EEPROM			0x48									// значение команды копирование ОЗУ в ПЗУ
#define REPETED_LOADING				0xB8									// значение команды повторная загрузка
#define TYPE_OF_POWER				0xB4									// значение команды вид питания датчика
//***********************************************************************************************************
// ОПРЕДЕЛЕНИЕ ВСПОМОГАТЕЛЬНЫХ ЗНАЧЕНИЙ ***************************************
#define CONVERTING_12bit			0x7F									// значение установки точности преоброзования данных
#define CONVERTING_11bit			0x5F
#define CONVERTING_10bit			0x3F
#define CONVERTING_09bit			0x1F
//***********************************************************************************************************
#define Successful_Init_DS18B20		0										// значение успешной инициализации устройства
#define Unsuccessful_Init_DS18B20	1										// значение инициализации устройства с ошибкой
#define Wire_bus_low_bit			OUT_PORT_DS18B20 -> BSRRH |= Set_bit_wire	// установка шины 1-wire в состояние лог. "0"
#define Wire_bus_high_bit			OUT_PORT_DS18B20 -> BSRRL |= Reset_bit_wire	// установка шины 1-wire в состояние лог. "1"
#define PIN_read_1_Wire_bus			OUT_PORT_DS18B20 -> IDR & Read_bit_wire
//***********************************************************************************************************
// ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ ***************************************
unsigned long long Adrs_DS1820[Sum_enable_device] __attribute__((section ("DS1820")));      
unsigned long long Data_memory_DS1820[Sum_enable_device] __attribute__((section ("DS1820"))); 
unsigned long Temp_DS1820[Sum_enable_device] __attribute__((section ("DS1820")));               

/******************************************************************************/
// ФУНКЦИЯ ВКЛЮЧЕНИЯ DS18B20 ***************************************
//void DS18B20_ON(void);
// ФУНКЦИЯ ИНИЦИАЛИЗАЦИИ DS18B20 ***************************************
extern char DS18B20_init(void);
// ФУНКЦИЯ ПРОЧТЕНИЯ БИТА С УСТРОЙСТВА DS18B20 ***************************************
extern char READ_BIT_DS18B20(void);
// ФУНКЦИЯ ПЕРЕДАЧИ БИТА НА УСТРОУСТВО DS18B20 ***************************************
extern void WRITE_BIT_DS18B20(char bit_write);
// ФУНКЦИЯ ПОИСКА ROM DS18B20 ***************************************
extern void SEARCH_ROM_DS18B20();
// ФУНКЦИЯ ПОСЫЛКИ КОММАНДЫ НА УСТРОЙСТВО DS18B20 ***************************************
extern void Send_com_DS18B20(char comm_1_wire);
// ФУНКЦИЯ ПОСЫЛКИ КОММАНДЫ ПРЕОБРАЗОВАНИЯ ТЕМПЕРАТУРЫ НА УСТРОЙСТВО DS18B20 ***************************************
extern void Convert_TEMP_all_DS18B20(void);
// ФУНКЦИЯ ПОСЫЛКИ АДРЕСА УСТРОЙСТВА DS18B20 ***************************************
extern void Send_address_DS18B20(char num_device);
// ФУНКЦИЯ СЧИТЫВАНИЯ ТЕМПЕРАТУРЫ С ОДНОГО УСТРОЙСТВА DS18B20 ***************************************
extern short Read_TEMP_DS18B20(char Num_DS18B20, char crc_on);
// ФУНКЦИЯ ПРОЧТЕНИЯ 8 БАЙТ ДАННЫХ С УСТРОЙСТВА DS18B20 ***************************************
extern char READ_bits_DS18B20(char sum_num_bit, char n_dev);
// ФУНКЦИЯ РАСЧЁТА КОНТРОЛЬНОЙ СУММЫ CRC ***************************************
extern char CRC_DS18B20 (unsigned long long *orig_crc);


#endif	// конец DS18B20_H
/******************************************************************************/
